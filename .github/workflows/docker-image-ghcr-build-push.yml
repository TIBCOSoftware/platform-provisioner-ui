name: Build and push docker image to GHCR Public repo

on:
  workflow_dispatch:
    inputs:
      tagName:
        description: 'The image tag name. master for staging, production for production, latest for on-perm build. (comma-separated for multiple tags)'
        required: true
        default: 'main'
      branchName:
        description: 'The git branch name to checkout'
        required: false
        default: 'main'
      dockerfileName:
        description: 'The Dockerfile name used for build. Dockerfile for production build. Dockerfile.dev for development build'
        required: true
        default: 'Dockerfile'
        type: choice
        options:
          - Dockerfile
          - Dockerfile.dev
      platform:
        description: 'The platform to build the image for. linux/amd64, linux/arm64, linux/arm/v7 for Raspberry Pi'
        required: true
        default: 'linux/amd64,linux/arm64'
        type: string

# will push to ghcr.io/tibcosoftware/platform-provisioner-ui/platform-provisioner-ui:${{ github.event.inputs.tagName }}
env:
  REGISTRY: ghcr.io
  PUBLIC_REPO: ghcr.io/tibcosoftware/platform-provisioner-ui/platform-provisioner-ui

jobs:
  release-docker:
    name: build and push
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branchName }}
      - name: Convert repository name to lowercase # repository name must be lowercase
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare tags
        id: prep-tags
        run: |
          TAGS_INPUT="${{ github.event.inputs.tagName }}"
          IMAGE_BASE="${{ env.PUBLIC_REPO }}"

          # process tags and remove spaces
          TAGS=""
          IFS=',' read -ra ADDR <<< "$TAGS_INPUT"
          TAGS_LIST=()
          for tag in "${ADDR[@]}"; do
            CLEAN_TAG="$(echo -n "$tag" | xargs)"  # Trim spaces
            TAGS_LIST+=("${IMAGE_BASE}:${CLEAN_TAG}")
          done

          # use comma as separator
          FINAL_TAGS="$(IFS=','; echo "${TAGS_LIST[*]}")"
          echo "TAGS=$FINAL_TAGS" >> $GITHUB_ENV
      - name: Set environment variables
        run: |
          echo "GIT_BRANCH=${{ github.event.inputs.branchName }}" >> $GITHUB_ENV
          echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV
          echo "DOCKERFILE=${{ github.event.inputs.dockerfileName }}" >> $GITHUB_ENV
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ github.event.inputs.platform }}
          context: ./provisioner-webui/
          file: ./provisioner-webui/dev/${{ github.event.inputs.dockerfileName }}
          push: true
          tags: ${{ env.TAGS }}
          build-args: |
            GIT_BRANCH=${{ env.GIT_BRANCH }}
            GIT_COMMIT=${{ env.COMMIT_SHA }}
            BUILD_TIME=${{ env.BUILD_TIME }}
            DOCKERFILE=${{ env.DOCKERFILE }}
          labels: |
            org.opencontainers.image.created=${{ env.BUILD_TIME }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ env.COMMIT_SHA }}
            org.opencontainers.image.revision=${{ env.COMMIT_SHA }}
            org.opencontainers.image.ref.name=${{ env.GIT_BRANCH }}
            org.opencontainers.image.title=${{ github.repository }}
